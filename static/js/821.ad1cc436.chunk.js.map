{"version":3,"file":"static/js/821.ad1cc436.chunk.js","mappings":"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","sources":["components/Section/Section.jsx","redux/contacts/selectors.js","components/Forms/NameField.jsx","components/Forms/NumberField.jsx","components/Forms/ContactForm.jsx","components/Loader/Loader.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["//import PropTypes from 'prop-types';\nimport { Typography, Stack } from '@mui/material';\n\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Stack component=\"section\"  sx={{ margin: '0 auto 32px', maxWidth: '50ch'}} >\n      <Typography variant=\"h4\" component=\"h2\" align='center' sx={{marginBottom: 3}}>\n  {title}\n</Typography>\n      {children}\n    </Stack>\n  );\n};\n\n// Section.propTypes = {\n//   title: PropTypes.string.isRequired,\n//   children: PropTypes.oneOfType([\n//     PropTypes.arrayOf(PropTypes.node),\n//     PropTypes.node,\n//   ]).isRequired,\n// };\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectAllContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectAllContacts, selectFilter],\n  (contacts, contactsFilter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(contactsFilter.toLowerCase().trim())\n    );\n  }\n);\n","import { Input, InputLabel } from '@mui/material';\nimport { StyledFormControl } from 'styles/styles.js';\n\nexport const NameField = ({ value, onInputChange }) => {\n  const handleNameChange = e => {\n    const { name, value } = e.target;\n    onInputChange(name, value);\n  };\n\n  return (\n    <StyledFormControl required autoComplete=\"off\" fullWidth>\n      <InputLabel htmlFor=\"standard-adornment-name\">Name</InputLabel>\n      <Input\n        id=\"standard-adornment-name\"\n        type=\"text\"\n        name=\"name\"\n        value={value}\n        onChange={handleNameChange}\n        autoComplete=\"off\"\n        inputProps={{\n          pattern: \"[A-Za-zĄąĆćĘęŁłŃńÓóŚśŹźŻż\\\\-' ]+\",\n          title:\n            'Only letters, apostrophe, dash, spaces, and Polish characters are allowed',\n        }}\n      />\n    </StyledFormControl>\n  );\n};\n","import { Input, InputLabel } from '@mui/material';\nimport { Notify } from 'notiflix';\nimport { StyledFormControl } from 'styles/styles.js';\n\n\nexport const NumberField = ({ value, onInputChange }) => {\n    const handleNumberChange = e => {\n      const { name, value } = e.target;\n      onInputChange(name, value);\n    };\n  \n    const isValidPhoneNumber = phoneNumber => {\n      const phoneNumberRegex = /^\\+?[0-9 ()-]+$/;\n      return phoneNumberRegex.test(phoneNumber);\n    };\n  \n    const handleBlur = e => {\n      const { value } = e.target;\n      if (value && !isValidPhoneNumber(value)) {\n        Notify.failure('Invalid phone number format');\n      }\n    };\n  \n    return (\n      <StyledFormControl required autoComplete=\"off\" fullWidth>\n        <InputLabel htmlFor=\"standard-adornment-number\">Number</InputLabel>\n        <Input\n          id=\"standard-adornment-number\"\n          type=\"tel\"\n          name=\"number\"\n          value={value}\n          onChange={handleNumberChange}\n          onBlur={handleBlur}\n          autoComplete=\"off\"\n        />\n      </StyledFormControl>\n    );\n  };\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations.js';\nimport { selectError } from 'redux/contacts/selectors.js';\nimport { selectAllContacts } from 'redux/contacts/selectors.js';\nimport { Notify } from 'notiflix';\nimport { Stack } from '@mui/material';\nimport { StyledButton } from 'styles/styles.js';\nimport { NameField } from './NameField.jsx';\nimport { NumberField } from './NumberField.jsx';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n  const error = useSelector(selectError);\n  const [values, setValues] = useState(initialValues);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    if (nameUnique(values.name)) {\n      dispatch(addContact(values));\n      Notify.success(`${values.name} added to your contacts.`);\n      setValues(initialValues);\n    }\n  };\n\n  const nameUnique = newName => {\n    const searchUnique = newName.toLowerCase();\n\n    if (contacts.find(({ name }) => name.toLowerCase() === searchUnique)) {\n      Notify.failure(`${newName} is already in contacts.`);\n      return false;\n    }\n    return true;\n  };\n\n  const handleInputChange = (fieldName, value) => {\n    setValues(prevValues => ({ ...prevValues, [fieldName]: value }));\n  };\n\n  if (error) {\n    Notify.error(`ERROR`);\n    return null;\n  }\n\n  return (\n    <Stack\n      sx={{ alignItems: 'center' }}\n      component=\"form\"\n      onSubmit={handleFormSubmit}\n      autoComplete=\"off\"\n    >\n      <NameField value={values.name} onInputChange={handleInputChange} />\n      <NumberField value={values.number} onInputChange={handleInputChange} />\n      <StyledButton type=\"submit\">Add Contact</StyledButton>\n    </Stack>\n  );\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = props => {\n  return (\n    <ThreeDots\n      height=\"70\"\n      width=\"70\"\n      radius=\"9\"\n      color=\"#FF5F6D\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{display: 'flex', justifyContent: 'center'}}\n      wrapperClassName=\"\"\n      visible={true}\n      {...props}\n    />\n  );\n};\n\nexport default Loader;","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/slice.js';\nimport { selectFilter } from 'redux/contacts/selectors.js';\nimport { TextField, Stack } from '@mui/material';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <Stack>\n      <TextField\n        label=\"Find contacts by name\"\n        type=\"search\"\n        variant=\"standard\"\n        value={filter}\n        name=\"filter\"\n        onChange={handleFilter}\n      />\n    </Stack>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations.js';\n//import PropTypes from 'prop-types';\nimport { ListItem, ListItemButton, ListItemText } from '@mui/material';\nimport { DeleteButton } from 'styles/styles.js';\n\nimport { Notify } from 'notiflix';\nimport { selectError } from 'redux/contacts/selectors.js';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n    Notify.info(`${contact.name} removed from your contacts.`);\n  };\n\n  if (error) {\n    Notify.error(`ERROR`);\n    return (\n      <h2 className=\"text\" style={{ fontSize: '40px' }}>\n        ERROR\n      </h2>\n    );\n  }\n\n  return (\n    <ListItem\n      secondaryAction={\n        <DeleteButton\n          edge=\"end\"\n          aria-label=\"delete contact\"\n          onClick={handleDelete}\n          type=\"button\"\n         \n        >\n          Delete\n        </DeleteButton>\n      }\n      disablePadding\n    >\n      <ListItemButton role=\"undefined\" dense>\n        <ListItemText  primary={contact.name}  sx={{flexBasis: '20%'}} />\n        <ListItemText secondary={contact.number} sx={{flexBasis: '50%'}} />\n      </ListItemButton>\n    </ListItem>\n  );\n};\n\n// ContactItem.propTypes = {\n//   contact: PropTypes.shape({\n//     name: PropTypes.string.isRequired,\n//     phone: PropTypes.string.isRequired,\n//   }).isRequired,\n// };\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { selectFilteredContacts } from 'redux/contacts/selectors.js';\nimport { selectError } from 'redux/contacts/selectors.js';\nimport { StyledList } from 'styles/styles.js';\n\nimport { Notify } from 'notiflix';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n\n  if (error) {\n    Notify.info(`Error`);\n    return (\n      <h2 className=\"text\" style={{ fontSize: '40px' }}>\n        ERROR\n      </h2>\n    );\n  }\n\n  if (filteredContacts.length === 0) {\n    return <></>;\n  }\n\n  return (\n    <div>\n      <StyledList sx={{ width: '100%', marginTop: 2 }}>\n        {filteredContacts.map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}\n      </StyledList>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations.js';\nimport { selectLoading } from 'redux/contacts/selectors.js';\nimport { Helmet } from 'react-helmet-async';\nimport { Typography } from '@mui/material';\nimport { Section } from 'components/Section/Section.jsx';\nimport { ContactForm } from 'components/Forms/ContactForm.jsx';\nimport Loader from 'components/Loader/Loader.jsx';\nimport { Filter } from 'components/Filter/Filter.jsx';\nimport { ContactList } from 'components/ContactList/ContactList.jsx';\nimport { selectAllContacts } from 'redux/contacts/selectors.js';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const contacts = useSelector(selectAllContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n\n      <Section title=\"Phonebook\">\n        <ContactForm />\n        {isLoading && <Loader />}\n      </Section>\n      <Section title=\"Contacts\">\n        {contacts.length > 0 ? (\n          <Filter />\n        ) : (\n          <Typography align=\"center\">\n            Looks like you don`t have any contacts yet or just clear them all.\n            Please add new contact.\n          </Typography>\n        )}\n        <ContactList />\n      </Section>\n    </>\n  );\n}\n"],"names":["Section","title","children","component","sx","margin","maxWidth","variant","align","marginBottom","selectLoading","state","contacts","isLoading","selectFilter","filter","selectAllContacts","items","selectError","error","selectFilteredContacts","createSelector","contactsFilter","contact","name","toLowerCase","includes","trim","NameField","value","onInputChange","required","autoComplete","fullWidth","InputLabel","htmlFor","Input","id","type","onChange","e","target","inputProps","pattern","NumberField","onBlur","test","Notify","initialValues","number","ContactForm","dispatch","useDispatch","useSelector","useState","values","setValues","nameUnique","newName","searchUnique","find","handleInputChange","fieldName","prevValues","Stack","alignItems","onSubmit","preventDefault","addContact","props","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","wrapperClassName","visible","Filter","TextField","label","setFilter","ContactItem","className","style","fontSize","ListItem","secondaryAction","edge","onClick","deleteContact","disablePadding","ListItemButton","role","dense","ListItemText","primary","flexBasis","secondary","ContactList","filteredContacts","length","marginTop","map","Contacts","useEffect","fetchContacts","Typography"],"sourceRoot":""}