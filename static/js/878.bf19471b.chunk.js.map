{"version":3,"file":"static/js/878.bf19471b.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/Section/Section.jsx","components/ContactForm/ContactForm.jsx","components/Loader/Loader.jsx","components/Filter/Filter.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectLoading = state => state.contacts.isLoading;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectAllContacts = state => state.contacts.items;\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n       [selectAllContacts, selectFilter],\n       (contacts, contactsFilter) => {\n         return contacts.filter(contact =>\n           contact.name.toLowerCase().includes(contactsFilter.toLowerCase().trim())\n         );\n       }\n     );\n    ","//import PropTypes from 'prop-types';\nimport { Typography, Stack } from '@mui/material';\n\n\nexport const Section = ({ title, children }) => {\n  return (\n    <Stack component=\"section\"  sx={{paddingLeft: 5, paddingRight: 5, marginBottom: 5}} >\n      <Typography variant=\"h4\" component=\"h2\" align='center' >\n  {title}\n</Typography>\n      {children}\n    </Stack>\n  );\n};\n\n// Section.propTypes = {\n//   title: PropTypes.string.isRequired,\n//   children: PropTypes.oneOfType([\n//     PropTypes.arrayOf(PropTypes.node),\n//     PropTypes.node,\n//   ]).isRequired,\n// };\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations.js';\nimport { selectError } from 'redux/contacts/selectors.js';\nimport { selectAllContacts } from 'redux/contacts/selectors.js';\nimport { useReducer } from 'react';\nimport { Notify } from 'notiflix';\nimport { TextField, Stack, Button } from '@mui/material';\n\n\nconst initialValues = {\n  name: '',\n  phone: '',\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'name':\n      return { ...state, name: action.payload };\n    case 'number':\n      return { ...state, phone: action.payload };\n    case 'reset':\n      return { ...action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectAllContacts);\n  const error = useSelector(selectError);\n\n  const [{ name, phone }, dispatchReducer] = useReducer(reducer, initialValues);\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n\n    if (nameUnique(name)) {\n      dispatch(addContact({ name, phone }));\n      Notify.success(`${name} added to your contacts.`);\n    }\n\n    dispatchReducer({ type: 'reset', payload: initialValues });\n  };\n\n  const nameUnique = newName => {\n    const searchUnique = newName.toLowerCase();\n\n    if (contacts.find(({ name }) => name.toLowerCase() === searchUnique)) {\n      Notify.failure(`${newName} is already in contacts.`);\n      return false;\n    }\n    return true;\n  };\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n    dispatchReducer({ type: name, payload: value });\n  };\n\n  if (error) {\n    Notify.error(`ERROR`);\n    return;\n  }\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <Stack spacing={4} sx={{ margin: '0 auto' }}>\n        <TextField\n          id=\"name\"\n          label=\"Name\"\n          variant=\"standard\"\n          type=\"text\"\n          name=\"name\"\n          inputProps={{\n            pattern: \"^[a-zA-ZÀ-ÿ]+(([' -][a-zA-ZÀ-ÿ ])?[a-zA-ZÀ-ÿ]*)*$\",\n          }}\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          value={name}\n          onChange={handleInputChange}\n          required\n        \n        />\n\n        <TextField\n          id=\"number\"\n          label=\"Number\"\n          variant=\"standard\"\n          type=\"tel\"\n          name=\"number\"\n          inputProps={{\n            pattern:\n              '\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}',\n          }}\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          value={phone}\n          onChange={handleInputChange}\n          required\n  \n        />\n\n        <Button type=\"submit\" variant=\"outlined\">\n          Add Contact\n        </Button>\n      </Stack>\n    </form>\n  );\n};\n","import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = props => {\n  return (\n    <ThreeDots\n      height=\"70\"\n      width=\"70\"\n      radius=\"9\"\n      color=\"#6096ba\"\n      ariaLabel=\"three-dots-loading\"\n      wrapperStyle={{display: 'flex', justifyContent: 'center'}}\n      wrapperClassName=\"\"\n      visible={true}\n      {...props}\n    />\n  );\n};\n\nexport default Loader;","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/slice.js';\nimport { selectFilter } from 'redux/contacts/selectors.js';\nimport { TextField, Stack } from '@mui/material';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleFilter = e => {\n    dispatch(setFilter(e.target.value));\n  \n  };\n\n  return (\n    <Stack >\n     \n       \n        <TextField\n          label=\"Find contacts by name\"\n          type=\"search\"\n          variant='standard'\n          value={filter}\n          name=\"filter\"\n          onChange={handleFilter}\n        />\n     \n    </Stack>\n  );\n};\n\n\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations.js';\n//import PropTypes from 'prop-types';\nimport { ListItem, Button, ListItemButton, ListItemText } from '@mui/material';\n\nimport { Notify } from 'notiflix';\nimport { selectError } from 'redux/contacts/selectors.js';\n\nexport const ContactItem = ({ contact }) => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n    Notify.info(`${contact.name} removed from your contacts.`);\n  };\n\n  if (error) {\n    Notify.error(`ERROR`);\n    return (\n      <h2 className=\"text\" style={{ fontSize: '40px' }}>\n        ERROR\n      </h2>\n    );\n  }\n\n  return (\n    <ListItem\n      secondaryAction={\n        <Button\n          edge=\"end\"\n          aria-label=\"delete contact\"\n          onClick={handleDelete}\n          type=\"button\"\n        >\n          Delete\n        </Button>\n      }\n      disablePadding\n    >\n      <ListItemButton role=\"undefined\" dense>\n        <ListItemText  primary={contact.name}  sx={{flexBasis: '20%'}} />\n        <ListItemText secondary={contact.phone} sx={{flexBasis: '50%'}} />\n      </ListItemButton>\n    </ListItem>\n  );\n};\n\n// ContactItem.propTypes = {\n//   contact: PropTypes.shape({\n//     name: PropTypes.string.isRequired,\n//     phone: PropTypes.string.isRequired,\n//   }).isRequired,\n// };\n","import { useSelector } from 'react-redux';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport { selectFilteredContacts } from 'redux/contacts/selectors.js';\nimport { selectError } from 'redux/contacts/selectors.js';\nimport { List } from '@mui/material';\n\nimport { Notify } from 'notiflix';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  const error = useSelector(selectError);\n\n  if (error) {\n    Notify.info(`Error`);\n    return (\n      <h2 className=\"text\" style={{ fontSize: '40px' }}>\n        ERROR\n      </h2>\n    );\n  }\n\n  if (filteredContacts.length === 0) {\n    return <></>;\n  }\n\n  return (\n    <div>\n      <List   sx={{ width: '100%', marginTop: 2}}>\n        {filteredContacts.map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}\n      </List>\n    </div>\n  );\n};\n","\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations.js';\nimport { selectLoading } from 'redux/contacts/selectors.js';\nimport { Helmet } from 'react-helmet';\nimport { Container, Typography } from '@mui/material';\nimport { Section } from 'components/Section/Section.jsx';\nimport { ContactForm } from 'components/ContactForm/ContactForm.jsx';\nimport Loader from 'components/Loader/Loader.jsx';\nimport { Filter } from 'components/Filter/Filter.jsx';\nimport { ContactList } from 'components/ContactList/ContactList.jsx';\nimport { selectAllContacts } from 'redux/contacts/selectors.js';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const contacts = useSelector(selectAllContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <Container maxWidth='sm' sx={{paddingBottom: 10}}  >\n     \n     <Section title=\"Phonebook\">\n       <ContactForm />\n        {isLoading && <Loader  />}\n     </Section>\n     <Section title=\"Contacts\">\n   \n       {contacts.length > 0 ? (\n         <Filter />\n       ) : (\n         <Typography align='center'>\n           Looks like you don`t have any contacts yet or just clear them all.\n           Please add new contact.\n         </Typography>\n       )}\n       <ContactList />\n   \n     </Section>\n  \n </Container>\n      {/* <TaskEditor />\n      <div>\n        {isLoading && 'Request in progress...'}\n      </div>\n      <TaskList/> */}\n    </>\n  );\n}"],"names":["selectLoading","state","contacts","isLoading","selectFilter","filter","selectAllContacts","items","selectError","error","selectFilteredContacts","createSelector","contactsFilter","contact","name","toLowerCase","includes","trim","Section","title","children","Stack","component","sx","paddingLeft","paddingRight","marginBottom","Typography","variant","align","initialValues","phone","reducer","action","type","payload","ContactForm","dispatch","useDispatch","useSelector","useReducer","dispatchReducer","nameUnique","newName","searchUnique","find","Notify","handleInputChange","e","currentTarget","value","onSubmit","preventDefault","addContact","spacing","margin","TextField","id","label","inputProps","pattern","onChange","required","Button","props","height","width","radius","color","ariaLabel","wrapperStyle","display","justifyContent","wrapperClassName","visible","Filter","setFilter","target","ContactItem","className","style","fontSize","ListItem","secondaryAction","edge","onClick","deleteContact","disablePadding","ListItemButton","role","dense","ListItemText","primary","flexBasis","secondary","ContactList","filteredContacts","length","List","marginTop","map","Contacts","useEffect","fetchContacts","Helmet","Container","maxWidth","paddingBottom"],"sourceRoot":""}